"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = __importDefault(require("./base"));
const order_1 = __importDefault(require("./http/order"));
const orderPath = "/v3/orders";
class Order extends base_1.default {
    create(market, orderPayload) {
        return __awaiter(this, void 0, void 0, function* () {
            const httpClient = new order_1.default(this.config);
            const response = yield httpClient.post(market, orderPath, orderPayload);
            return response;
        });
    }
    edit(market, orderId, patchOrderPayload) {
        return __awaiter(this, void 0, void 0, function* () {
            const httpClient = new order_1.default(this.config);
            const response = yield httpClient.patch(market, `${orderPath}/${orderId}`, patchOrderPayload);
            return response;
        });
    }
    retrieve(market, orderId) {
        return __awaiter(this, void 0, void 0, function* () {
            const httpClient = new order_1.default(this.config);
            const response = yield httpClient.get(market, `${orderPath}/${orderId}`);
            return response;
        });
    }
    cancel(market, orderId) {
        return __awaiter(this, void 0, void 0, function* () {
            const httpClient = new order_1.default(this.config);
            yield httpClient.delete(market, `${orderPath}/${orderId}`);
            return true;
        });
    }
    addPriorityFee(market, orderId, fee) {
        return __awaiter(this, void 0, void 0, function* () {
            const httpClient = new order_1.default(this.config);
            yield httpClient.post_priorityfee(market, `${orderPath}/${orderId}/priority-fee`, {
                priorityFee: fee,
            });
            return true;
        });
    }
}
exports.default = Order;
