"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = __importDefault(require("./base"));
class DriverHTTPClient extends base_1.default {
    static toIDriver(resolve) {
        return (d) => {
            var _a, _b;
            const driver = d;
            driver.id = driver.driverId;
            const contact = {
                name: driver.name,
                phone: driver.phone,
            };
            driver.updatedAt = (_a = driver === null || driver === void 0 ? void 0 : driver.coordinates) === null || _a === void 0 ? void 0 : _a.updatedAt;
            if (driver.updatedAt) {
                driver.updatedAt = new Date(driver.updatedAt);
            }
            delete driver.name;
            delete driver.phone;
            delete driver.driverId;
            (_b = driver === null || driver === void 0 ? void 0 : driver.coordinates) === null || _b === void 0 ? true : delete _b.updatedAt;
            driver.contact = contact;
            resolve(driver);
        };
    }
    get(market, path) {
        return new Promise((resolve, reject) => {
            const response = this.makeCall(market, path);
            response
                .then(DriverHTTPClient.toIDriver(resolve))
                .catch(DriverHTTPClient.errorHandler(reject));
        });
    }
    delete(market, path, reason) {
        return new Promise((resolve, reject) => {
            const response = this.makeCall(market, path, reason, "DELETE");
            response
                .then(() => {
                resolve(true);
            })
                .catch(DriverHTTPClient.errorHandler(reject));
        });
    }
}
exports.default = DriverHTTPClient;
